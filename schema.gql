# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @upper on FIELD_DEFINITION

interface Node {
  id: ID!
}

type Answer implements Node {
  id: ID!
  answer_number: Int!
  answer_item: String!
  answer_score: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  question: Question!
  question_id: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Question implements Node {
  id: ID!
  question_number: Int!
  question_item: String!
  answers: [Answer!]
  createdAt: Timestamp!
  updatedAt: Timestamp!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Survey {
  """survey id"""
  survey_id: Int!
  created_at: Timestamp!
  updated_at: Timestamp!
  total_score: Int!
  questions: [Question!]!
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean
  hasPreviousPage: Boolean
}

type QuestionEdge {
  node: Question!

  """Used in `before` and `after` args"""
  cursor: String!
}

type CreateQuestionPayload {
  questionEdge: QuestionEdge!
}

type AnswerEdge {
  node: Answer!

  """Used in `before` and `after` args"""
  cursor: String!
}

type AggregateAnswer {
  count: Float!
}

type CreateAnswerPayload {
  answerEdge: AnswerEdge!
}

type Query {
  survey(id: Int!): Survey!
  findQuestions: [Question!]!
  findQuestionById(id: String!): Question!
  getAnswers: [Answer!]!
  node(id: ID!): Node
}

type Mutation {
  createSurvey(createSurveyInput: CreateSurveyInput!): Survey!
  updateSurvey(updateSurveyInput: UpdateSurveyInput!): Survey!
  removeSurvey(id: Int!): Survey!
  createQuestion(data: CreateQuestionInput!): CreateQuestionPayload!
  updateQuestion(data: UpdateQuestionInput!, where: QuestionWhereUniqueInput!): Question
  removeQuestion(id: Int!): Question!
  createAnswer(data: CreateAnswerInput!): CreateAnswerPayload!
  updateAnswer(data: UpdateAnswerInput!, where: AnswerWhereUniqueInput!): Answer
  removeAnswer(id: Int!): Answer!
}

input CreateSurveyInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateSurveyInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateQuestionInput {
  question_item: String!
  question_number: Int!
}

input UpdateQuestionInput {
  question_item: String
  question_number: Int
}

input QuestionWhereUniqueInput {
  id: ID!
}

input CreateAnswerInput {
  answer_number: Int!
  answer_item: String!
  answer_score: Int!
  question_id: String!
}

input UpdateAnswerInput {
  answer_number: Int
  answer_item: String
  answer_score: Int
  question_id: String
}

input AnswerWhereUniqueInput {
  id: ID!
}